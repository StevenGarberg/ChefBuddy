@page "/recipes/add"
@page "/recipes/{Id}/edit"
@using ChefBuddy.Models
@using Microsoft.AspNetCore.Components

<RadzenDialog />
<RadzenNotification />

<PageTitle>Chef Buddy - Add/Edit Recipe</PageTitle>

@if (Id == null)
{
    <h1>Log Recipe</h1>
}
else
{
    <h1>Edit Recipe<br/><small>ID: @Id</small></h1>
}
<hr/>

@if (loadFailed)
{
    <h1>ERROR</h1>
    <h3>@exception.Message</h3>
    <p>@exception.StackTrace</p>
}
else if (recipe == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <RadzenTemplateForm Data="@recipe" Submit="@(async (Recipe args) => { await Submit(); })">
        <div class="row">
            <div class="col-md-6">
                <fieldset>
                    <legend>Details</legend>
                    <div class="row mb-3">
                        <div class="col-md-4 align-items-center d-flex">
                            <RadzenLabel Text="Name"/>
                        </div>
                        <div class="col-md-8">
                            <RadzenTextBox style="width: 100%;" TextProperty="Name" @bind-Value="recipe.Name" />
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-4 align-items-center d-flex">
                            <RadzenLabel Text="Duration"/>
                        </div>
                        <div class="col-md-8">
                            <RadzenTextArea style="width: 100%;" TextProperty="Description" @bind-Value="recipe.Description" />
                        </div>
                    </div>
                </fieldset>
                <hr/>
                @if (recipe.StepsViewModel?.Any() ?? false)
                {
                    var stepCount = recipe.StepsViewModel.Count;
                    for (var i = 0; i < stepCount; i++)
                    {
                        var index = i;
                        var step = recipe.StepsViewModel[i];
                        <fieldset>
                            <h2>Step #@(i+1) - @step.Name</h2>
                            <div class="row">
                                <div class="col-md-4 align-items-center d-flex">
                                    <RadzenLabel Text="Name"/>
                                </div>
                                <div class="col-md-8">
                                    <RadzenTextBox style="width: 100%;" TextProperty="Name" @bind-Value="step.Name" Change=@(args => UpdateName(args, step)) />
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4 align-items-center d-flex">
                                    <RadzenLabel Text="Time"/>
                                </div>
                                <div class="col-md-8">
                                    <RadzenNumeric Placeholder="3" style="width: 100%;" Name="Sets" @bind-Value="step.Time"/>
                                </div>
                            </div>
                            <br/>
                            <RadzenButton ButtonType="ButtonType.Button" Icon="delete" Text="Remove Step" Click="async () => { await RemoveStep(step); }" ButtonStyle="ButtonStyle.Danger"/>
                            @if (i != stepCount - 1)
                            {
                                <RadzenButton ButtonType="ButtonType.Button" Icon="arrow_downward" Text="Move Down" Click="() => { MoveDown(index, recipe.StepsViewModel); }" ButtonStyle="ButtonStyle.Info"/>
                            }
                            @if (i != 0)
                            {
                                <RadzenButton ButtonType="ButtonType.Button" Icon="arrow_upward" Text="Move Up" Click="() => { MoveUp(index, recipe.StepsViewModel); }" ButtonStyle="ButtonStyle.Info"/>
                            }
                        </fieldset>
                        <hr/>
                    }
                }

                <div class="row">
                    <div class="col-md-12">
                        <RadzenButton ButtonType="ButtonType.Button" Icon="create" Text="Add Step" Click="() => { AddStep(); }" ButtonStyle="ButtonStyle.Secondary"/>
                    </div>
                </div>
                <br/><br/>
                <div class="row">
                    <div class="col-md-12">
                        <RadzenButton ButtonType="ButtonType.Submit" Icon="save" Text="Save" ButtonStyle="ButtonStyle.Info"/>
                        <RadzenButton ButtonType="ButtonType.Reset" Icon="cancel" Text="Cancel" Click="Cancel" ButtonStyle="ButtonStyle.Danger"/>
                    </div>
                </div>
            </div>
            <div class="col-md-6">
            </div>
        </div>

    </RadzenTemplateForm>
    <br/>
    <br/>
}